# quick-lint-js finds bugs in JavaScript programs.
# Copyright (C) 2020  Matthew "strager" Glazar
#
# This file is part of quick-lint-js.
#
# quick-lint-js is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# quick-lint-js is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with quick-lint-js.  If not, see <https://www.gnu.org/licenses/>.
#
msgid ""
msgstr ""
"Project-Id-Version: lada 1\n"
"Report-Msgid-Bugs-To: strager.nds@gmail.com\n"
"PO-Revision-Date: 2022-05-20 20:44-0400\n"
"Last-Translator: U-DESKTOP-BKS115B\\doroz <strager.nds@gmail.com>\n"
"Language-Team: English\n"
"Language: en_US@snarky\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#: benchmark/benchmark-translation.cpp src/quick-lint-js/diagnostic-types.h
msgid "variable assigned before its declaration"
msgstr "variable assigned before its declaration"

#: benchmark/benchmark-translation.cpp src/quick-lint-js/diagnostic-types.h
msgid "variable declared here"
msgstr "variable declared here"

#: benchmark/benchmark-translation.cpp
msgid "~~~ invalid string, do not use outside benchmark ~~~"
msgstr "~~~ invalid string, do not use outside benchmark ~~~"

#: benchmark/benchmark-translation.cpp
msgid "another invalid string, do not use outside benchmark"
msgstr "another invalid string, do not use outside benchmark"

#: src/diagnostic-formatter.cpp
msgid "'do-while' loop"
msgstr "'do-while' loop"

#: src/diagnostic-formatter.cpp
msgid "'for' loop"
msgstr "'for' loop"

#: src/diagnostic-formatter.cpp
msgid "'if' statement"
msgstr "'if' statement"

#: src/diagnostic-formatter.cpp
msgid "'while' loop"
msgstr "'while' loop"

#: src/diagnostic-formatter.cpp
msgid "'with' statement"
msgstr "'with' statement"

#: src/diagnostic-formatter.cpp
msgid "a 'do-while' loop"
msgstr "a 'do-while' loop"

#: src/diagnostic-formatter.cpp
msgid "a 'for' loop"
msgstr "a 'for' loop"

#: src/diagnostic-formatter.cpp
msgid "an 'if' statement"
msgstr "an 'if' statement"

#: src/diagnostic-formatter.cpp
msgid "a 'while' loop"
msgstr "a 'while' loop"

#: src/diagnostic-formatter.cpp
msgid "a 'with' statement"
msgstr "a 'with' statement"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing '<>' and '</>' to enclose multiple children"
msgstr "missing '<>' and '</>' to enclose multiple children"

#: src/quick-lint-js/diagnostic-types.h
msgid "children end here"
msgstr "children end here"

#: src/quick-lint-js/diagnostic-types.h
msgid "'=' changes variables; to compare, use '===' instead"
msgstr "'=' changes variables; to compare, use '===' instead"

#: src/quick-lint-js/diagnostic-types.h
msgid "assignment to const global variable"
msgstr "assignment to const global variable"

#: src/quick-lint-js/diagnostic-types.h
msgid "assignment to const variable"
msgstr "assignment to const variable"

#: src/quick-lint-js/diagnostic-types.h
msgid "const variable declared here"
msgstr "const variable declared here"

#: src/quick-lint-js/diagnostic-types.h
msgid "assignment to imported variable"
msgstr "assignment to imported variable"

#: src/quick-lint-js/diagnostic-types.h
msgid "imported variable declared here"
msgstr "imported variable declared here"

#: src/quick-lint-js/diagnostic-types.h
msgid "assignment to const variable before its declaration"
msgstr "assignment to const variable before its declaration"

#: src/quick-lint-js/diagnostic-types.h
msgid "assignment to undeclared variable"
msgstr "assignment to undeclared variable"

#: src/quick-lint-js/diagnostic-types.h
msgid "'await' is only allowed in async functions"
msgstr "'await' is only allowed in async functions"

#: src/quick-lint-js/diagnostic-types.h
msgid "'await' cannot be followed by an arrow function; use 'async' instead"
msgstr "'await' cannot be followed by an arrow function; use 'async' instead"

#: src/quick-lint-js/diagnostic-types.h
msgid "'async static' is not allowed; write 'static async' instead"
msgstr "'async static' is not allowed; write 'static async' instead"

#: src/quick-lint-js/diagnostic-types.h
msgid "BigInt literal contains decimal point"
msgstr "BigInt literal contains decimal point"

#: src/quick-lint-js/diagnostic-types.h
msgid "BigInt literal contains exponent"
msgstr "BigInt literal contains exponent"

#: src/quick-lint-js/diagnostic-types.h
msgid "C-style for loop is missing its third component"
msgstr "C-style for loop is missing its third component"

#: src/quick-lint-js/diagnostic-types.h
msgid "cannot assign to loop variable in for of/in loop"
msgstr "cannot assign to loop variable in for of/in loop"

#: src/quick-lint-js/diagnostic-types.h
msgid "cannot access private identifier outside class"
msgstr "cannot access private identifier outside class"

#: src/quick-lint-js/diagnostic-types.h
msgid "assigning to 'async' in a for-of loop requires parentheses"
msgstr "assigning to 'async' in a for-of loop requires parentheses"

#: src/quick-lint-js/diagnostic-types.h
msgid "cannot declare 'await' inside async function"
msgstr "cannot declare 'await' inside async function"

#: src/quick-lint-js/diagnostic-types.h
msgid "classes cannot be named 'let'"
msgstr "classes cannot be named 'let'"

#: src/quick-lint-js/diagnostic-types.h
msgid "classes cannot be named 'await' in async function"
msgstr "classes cannot be named 'await' in async function"

#: src/quick-lint-js/diagnostic-types.h
#, fuzzy
msgid "TypeScript interfaces cannot be named 'await' in async function"
msgstr "classes cannot be named 'await' in async function"

#: src/quick-lint-js/diagnostic-types.h
msgid "let statement cannot declare variables named 'let'"
msgstr "let statement cannot declare variables named 'let'"

#: src/quick-lint-js/diagnostic-types.h
msgid "cannot declare variable named keyword '{0}'"
msgstr "cannot declare variable named keyword '{0}'"

#: src/quick-lint-js/diagnostic-types.h
msgid "cannot declare 'yield' inside generator function"
msgstr "cannot declare 'yield' inside generator function"

#: src/quick-lint-js/diagnostic-types.h
msgid "cannot declare and export variable with 'export default'"
msgstr "cannot declare and export variable with 'export default'"

#: src/quick-lint-js/diagnostic-types.h
msgid "cannot export variable named 'let'"
msgstr "cannot export variable named 'let'"

#: src/quick-lint-js/diagnostic-types.h
msgid "cannot export variable named keyword '{0}'"
msgstr "cannot export variable named keyword '{0}'"

#: src/quick-lint-js/diagnostic-types.h
msgid "cannot import 'let'"
msgstr "cannot import 'let'"

#: src/quick-lint-js/diagnostic-types.h
msgid "cannot import variable named keyword '{0}'"
msgstr "cannot import variable named keyword '{0}'"

#: src/quick-lint-js/diagnostic-types.h
#, fuzzy
msgid "missing quotes around module name '{0}'"
msgstr "missing parentheses around operand of '{0}'"

#: src/quick-lint-js/diagnostic-types.h
msgid "cannot reference private variables without object; use 'this.'"
msgstr "cannot reference private variables without object; use 'this.'"

#: src/quick-lint-js/diagnostic-types.h
msgid "cannot update variable with '{0}' while declaring it"
msgstr "cannot update variable with '{0}' while declaring it"

#: src/quick-lint-js/diagnostic-types.h
msgid "remove '{0}' to update an existing variable"
msgstr "remove '{0}' to update an existing variable"

#: src/quick-lint-js/diagnostic-types.h
msgid "unexpected 'catch' without 'try'"
msgstr "unexpected 'catch' without 'try'"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing body for {1:headlinese}"
msgstr "missing body for {1:headlinese}"

#: src/quick-lint-js/diagnostic-types.h
msgid "a class statement is not allowed as the body of {1:singular}"
msgstr "a class statement is not allowed as the body of {1:singular}"

#: src/quick-lint-js/diagnostic-types.h
msgid "character is not allowed in identifiers"
msgstr "character is not allowed in identifiers"

#: src/quick-lint-js/diagnostic-types.h
msgid "commas are not allowed after spread parameter"
msgstr "commas are not allowed after spread parameter"

#: src/quick-lint-js/diagnostic-types.h
msgid "commas are not allowed between class methods"
msgstr "commas are not allowed between class methods"

#: src/quick-lint-js/diagnostic-types.h
msgid "JSON syntax error"
msgstr "JSON syntax error"

#: src/quick-lint-js/diagnostic-types.h
msgid "\"global-groups\" entries must be strings"
msgstr "\"global-groups\" entries must be strings"

#: src/quick-lint-js/diagnostic-types.h
msgid "\"global-groups\" must be a boolean or an array"
msgstr "\"global-groups\" must be a boolean or an array"

#: src/quick-lint-js/diagnostic-types.h
msgid "\"globals\" descriptor must be a boolean or an object"
msgstr "\"globals\" descriptor must be a boolean or an object"

#: src/quick-lint-js/diagnostic-types.h
msgid "\"globals\" descriptor \"shadowable\" property must be a boolean"
msgstr "\"globals\" descriptor \"shadowable\" property must be a boolean"

#: src/quick-lint-js/diagnostic-types.h
msgid "\"globals\" descriptor \"writable\" property must be a boolean"
msgstr "\"globals\" descriptor \"writable\" property must be a boolean"

#: src/quick-lint-js/diagnostic-types.h
msgid "\"globals\" must be an object"
msgstr "\"globals\" must be an object"

#: src/quick-lint-js/diagnostic-types.h
msgid "depth limit exceeded"
msgstr "depth limit exceeded"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing property name between '.' and '.'"
msgstr "missing property name between '.' and '.'"

#: src/quick-lint-js/diagnostic-types.h
msgid "'else' has no corresponding 'if'"
msgstr "'else' has no corresponding 'if'"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing comparison; '{1}' does not extend to the right side of '{0}'"
msgstr "missing comparison; '{1}' does not extend to the right side of '{0}'"

#: src/quick-lint-js/diagnostic-types.h
msgid "'{0}' found here"
msgstr "'{0}' found here"

#: src/quick-lint-js/diagnostic-types.h
msgid "escaped character is not allowed in identifiers"
msgstr "escaped character is not allowed in identifiers"

#: src/quick-lint-js/diagnostic-types.h
msgid "code point out of range"
msgstr "code point out of range"

#: src/quick-lint-js/diagnostic-types.h
msgid "code point in Unicode escape sequence must not be greater than U+10FFFF"
msgstr ""
"code point in Unicode escape sequence must not be greater than U+10FFFF"

#: src/quick-lint-js/diagnostic-types.h
msgid "escaping '-' is not allowed in tag names; write '-' instead"
msgstr "escaping '-' is not allowed in tag names; write '-' instead"

#: src/quick-lint-js/diagnostic-types.h
msgid "extra ',' is not allowed between function call arguments"
msgstr "extra ',' is not allowed between function call arguments"

#: src/quick-lint-js/diagnostic-types.h
msgid "expected 'as' between '{1}' and '{2}'"
msgstr "expected 'as' between '{1}' and '{2}'"

#: src/quick-lint-js/diagnostic-types.h
msgid "expected ',' between object literal entries"
msgstr "expected ',' between object literal entries"

#: src/quick-lint-js/diagnostic-types.h
msgid "expected expression before newline"
msgstr "expected expression before newline"

#: src/quick-lint-js/diagnostic-types.h
msgid "expected expression after 'case'"
msgstr "expected expression after 'case'"

#: src/quick-lint-js/diagnostic-types.h
msgid "expected expression before semicolon"
msgstr "expected expression before semicolon"

#: src/quick-lint-js/diagnostic-types.h
msgid "expected 'from \"name_of_module.mjs\"'"
msgstr "expected 'from \"name_of_module.mjs\"'"

#: src/quick-lint-js/diagnostic-types.h
msgid "expected 'from' before module specifier"
msgstr "expected 'from' before module specifier"

#: src/quick-lint-js/diagnostic-types.h
msgid "expected hexadecimal digits in Unicode escape sequence"
msgstr "expected hexadecimal digits in Unicode escape sequence"

#: src/quick-lint-js/diagnostic-types.h
msgid "expected '{{'"
msgstr "expected '{{'"

#: src/quick-lint-js/diagnostic-types.h
msgid "expected ')' to close function call"
msgstr "expected ')' to close function call"

#: src/quick-lint-js/diagnostic-types.h
msgid "function call started here"
msgstr "function call started here"

#: src/quick-lint-js/diagnostic-types.h
msgid "do-while loop needs parentheses around condition"
msgstr "do-while loop needs parentheses around condition"

#: src/quick-lint-js/diagnostic-types.h
msgid "do-while loop is missing '{1}' around condition"
msgstr "do-while loop is missing '{1}' around condition"

#: src/quick-lint-js/diagnostic-types.h
msgid "if statement needs parentheses around condition"
msgstr "if statement needs parentheses around condition"

#: src/quick-lint-js/diagnostic-types.h
msgid "if statement is missing '{1}' around condition"
msgstr "if statement is missing '{1}' around condition"

#: src/quick-lint-js/diagnostic-types.h
msgid "switch statement needs parentheses around condition"
msgstr "switch statement needs parentheses around condition"

#: src/quick-lint-js/diagnostic-types.h
msgid "switch statement is missing '{1}' around condition"
msgstr "switch statement is missing '{1}' around condition"

#: src/quick-lint-js/diagnostic-types.h
msgid "while loop needs parentheses around condition"
msgstr "while loop needs parentheses around condition"

#: src/quick-lint-js/diagnostic-types.h
msgid "while loop is missing '{1}' around condition"
msgstr "while loop is missing '{1}' around condition"

#: src/quick-lint-js/diagnostic-types.h
msgid "with statement needs parentheses around expression"
msgstr "with statement needs parentheses around expression"

#: src/quick-lint-js/diagnostic-types.h
msgid "with statement is missing '{1}' around expression"
msgstr "with statement is missing '{1}' around expression"

#: src/quick-lint-js/diagnostic-types.h
msgid "expected variable name for 'catch'"
msgstr "expected variable name for 'catch'"

#: src/quick-lint-js/diagnostic-types.h
msgid "expected variable name for 'import'-'as'"
msgstr "expected variable name for 'import'-'as'"

#: src/quick-lint-js/diagnostic-types.h
msgid "exporting requires 'default'"
msgstr "exporting requires 'default'"

#: src/quick-lint-js/diagnostic-types.h
msgid "exporting requires '{{' and '}'"
msgstr "exporting requires '{{' and '}'"

#: src/quick-lint-js/diagnostic-types.h
msgid "forwarding exports are only allowed in export-from"
msgstr "forwarding exports are only allowed in export-from"

#: src/quick-lint-js/diagnostic-types.h
msgid "unexpected 'finally' without 'try'"
msgstr "unexpected 'finally' without 'try'"

#: src/quick-lint-js/diagnostic-types.h
msgid "a function statement is not allowed as the body of {1:singular}"
msgstr "a function statement is not allowed as the body of {1:singular}"

#: src/quick-lint-js/diagnostic-types.h
msgid "generator function '*' belongs after keyword function"
msgstr "generator function '*' belongs after keyword function"

#: src/quick-lint-js/diagnostic-types.h
msgid "generator function '*' belongs before function name"
msgstr "generator function '*' belongs before function name"

#: src/quick-lint-js/diagnostic-types.h
msgid "'in' disallowed in C-style for loop initializer"
msgstr "'in' disallowed in C-style for loop initializer"

#: src/quick-lint-js/diagnostic-types.h
msgid "indexing requires an expression"
msgstr "indexing requires an expression"

#: src/quick-lint-js/diagnostic-types.h
msgid "invalid expression left of assignment"
msgstr "invalid expression left of assignment"

#: src/quick-lint-js/diagnostic-types.h
msgid "invalid hex escape sequence: {0}"
msgstr "invalid hex escape sequence: {0}"

#: src/quick-lint-js/diagnostic-types.h
msgid "invalid lone literal in object literal"
msgstr "invalid lone literal in object literal"

#: src/quick-lint-js/diagnostic-types.h
msgid "invalid function parameter"
msgstr "invalid function parameter"

#: src/quick-lint-js/diagnostic-types.h
msgid "'{0}' is not allowed for strings; use {1} instead"
msgstr "'{0}' is not allowed for strings; use {1} instead"

#: src/quick-lint-js/diagnostic-types.h
msgid ""
"'.' operator needs a key name; use + to concatenate strings; use [] to "
"access with a dynamic key"
msgstr ""
"'.' operator needs a key name; use + to concatenate strings; use [] to "
"access with a dynamic key"

#: src/quick-lint-js/diagnostic-types.h
msgid "invalid UTF-8 sequence"
msgstr "invalid UTF-8 sequence"

#: src/quick-lint-js/diagnostic-types.h
msgid "attribute has wrong capitalization; write '{1}' instead"
msgstr "attribute has wrong capitalization; write '{1}' instead"

#: src/quick-lint-js/diagnostic-types.h
msgid "misspelled React attribute; write '{1}' instead"
msgstr "misspelled React attribute; write '{1}' instead"

#: src/quick-lint-js/diagnostic-types.h
msgid "event attributes must be camelCase: '{1}'"
msgstr "event attributes must be camelCase: '{1}'"

#: src/quick-lint-js/diagnostic-types.h
msgid "React/JSX is not yet implemented"
msgstr "React/JSX is not yet implemented"

#: src/quick-lint-js/diagnostic-types.h
msgid "keywords cannot contain escape sequences"
msgstr "keywords cannot contain escape sequences"

#: src/quick-lint-js/diagnostic-types.h
msgid "label named 'await' not allowed in async function"
msgstr "label named 'await' not allowed in async function"

#: src/quick-lint-js/diagnostic-types.h
msgid "legacy octal literal may not be BigInt"
msgstr "legacy octal literal may not be BigInt"

#: src/quick-lint-js/diagnostic-types.h
msgid "legacy octal literals may not contain underscores"
msgstr "legacy octal literals may not contain underscores"

#: src/quick-lint-js/diagnostic-types.h
msgid "{0} with no bindings"
msgstr "{0} with no bindings"

#: src/quick-lint-js/diagnostic-types.h
msgid "a lexical declaration is not allowed as the body of {1:singular}"
msgstr "a lexical declaration is not allowed as the body of {1:singular}"

#: src/quick-lint-js/diagnostic-types.h
msgid "functions/methods should not have '=>'"
msgstr "functions/methods should not have '=>'"

#: src/quick-lint-js/diagnostic-types.h
msgid "methods should not use the 'function' keyword"
msgstr "methods should not use the 'function' keyword"

#: src/quick-lint-js/diagnostic-types.h
msgid "mismatched JSX tags; expected '</{1}>'"
msgstr "mismatched JSX tags; expected '</{1}>'"

#: src/quick-lint-js/diagnostic-types.h
msgid "opening '<{1}>' tag here"
msgstr "opening '<{1}>' tag here"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing end of array; expected ']'"
msgstr "missing end of array; expected ']'"

#: src/quick-lint-js/diagnostic-types.h
msgid "array started here"
msgstr "array started here"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing arrow operator for arrow function"
msgstr "missing arrow operator for arrow function"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing parameters for arrow function"
msgstr "missing parameters for arrow function"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing body for catch clause"
msgstr "missing body for catch clause"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing body for class"
msgstr "missing body for class"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing body for do-while loop"
msgstr "missing body for do-while loop"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing body for finally clause"
msgstr "missing body for finally clause"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing body for 'for' loop"
msgstr "missing body for 'for' loop"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing body for 'if' statement"
msgstr "missing body for 'if' statement"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing body for 'switch' statement"
msgstr "missing body for 'switch' statement"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing body for try statement"
msgstr "missing body for try statement"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing body for while loop"
msgstr "missing body for while loop"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing catch or finally clause for try statement"
msgstr "missing catch or finally clause for try statement"

#: src/quick-lint-js/diagnostic-types.h
msgid "try statement starts here"
msgstr "try statement starts here"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing catch variable name between parentheses"
msgstr "missing catch variable name between parentheses"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing comma between object literal entries"
msgstr "missing comma between object literal entries"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing ',' between variable declarations"
msgstr "missing ',' between variable declarations"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing ':' in conditional expression"
msgstr "missing ':' in conditional expression"

#: src/quick-lint-js/diagnostic-types.h
msgid "'?' creates a conditional expression"
msgstr "'?' creates a conditional expression"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing condition for if statement"
msgstr "missing condition for if statement"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing condition for while statement"
msgstr "missing condition for while statement"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing condition for switch statement"
msgstr "missing condition for switch statement"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing '...' in JSX attribute spread"
msgstr "missing '...' in JSX attribute spread"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing '=' after variable"
msgstr "missing '=' after variable"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing expression between parentheses"
msgstr "missing expression between parentheses"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing header and body for 'for' loop"
msgstr "missing header and body for 'for' loop"

#: src/quick-lint-js/diagnostic-types.h
msgid "for loop needs an iterable, or condition and update clauses"
msgstr "for loop needs an iterable, or condition and update clauses"

#: src/quick-lint-js/diagnostic-types.h
msgid "use 'while' instead to loop until a condition is false"
msgstr "use 'while' instead to loop until a condition is false"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing function parameter list"
msgstr "missing function parameter list"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing body for function"
msgstr "missing body for function"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing for loop header"
msgstr "missing for loop header"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing initializer in const declaration"
msgstr "missing initializer in const declaration"

#: src/quick-lint-js/diagnostic-types.h
msgid "unexpected expression; missing key for object entry"
msgstr "unexpected expression; missing key for object entry"

#: src/quick-lint-js/diagnostic-types.h
#, fuzzy
msgid "missing name for class method"
msgstr "missing name of class"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing name in function statement"
msgstr "missing name in function statement"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing name of class"
msgstr "missing name of class"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing name of exported class"
msgstr "missing name of exported class"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing name of exported function"
msgstr "missing name of exported function"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing name or parentheses for function"
msgstr "missing name or parentheses for function"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing operand for operator"
msgstr "missing operand for operator"

#: src/quick-lint-js/diagnostic-types.h
msgid "redundant delete statement on variable"
msgstr "redundant delete statement on variable"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing 'if' after 'else'"
msgstr "missing 'if' after 'else'"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing operator between expression and arrow function"
msgstr "missing operator between expression and arrow function"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing parentheses around operand of '{0}'"
msgstr "missing parentheses around operand of '{0}'"

#: src/quick-lint-js/diagnostic-types.h
msgid "'{0}' operator cannot be used before '**' without parentheses"
msgstr "'{0}' operator cannot be used before '**' without parentheses"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing parentheses around self-invoked function"
msgstr "missing parentheses around self-invoked function"

#: src/quick-lint-js/diagnostic-types.h
msgid "function starts here"
msgstr "function starts here"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing parentheses around left-hand side of '**'"
msgstr "missing parentheses around left-hand side of '**'"

#: src/quick-lint-js/diagnostic-types.h
msgid "'**' operator cannot be used after unary '{1}' without parentheses"
msgstr "'**' operator cannot be used after unary '{1}' without parentheses"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing property name after '.' operator"
msgstr "missing property name after '.' operator"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing semicolon after statement"
msgstr "missing semicolon after statement"

#: src/quick-lint-js/diagnostic-types.h
#, fuzzy
msgid "missing semicolon after field"
msgstr "missing semicolon after statement"

#: src/quick-lint-js/diagnostic-types.h
#, fuzzy
msgid "missing semicolon after index signature"
msgstr "missing semicolon after statement"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing semicolon between condition and update parts of for loop"
msgstr "missing semicolon between condition and update parts of for loop"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing semicolon between init and condition parts of for loop"
msgstr "missing semicolon between init and condition parts of for loop"

#: src/quick-lint-js/diagnostic-types.h
msgid ""
"incomplete export; expected 'export default ...' or 'export {{name}' or "
"'export * from ...' or 'export class' or 'export function' or 'export let'"
msgstr ""
"incomplete export; expected 'export default ...' or 'export {{name}' or "
"'export * from ...' or 'export class' or 'export function' or 'export let'"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing value for object property"
msgstr "missing value for object property"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing variable name"
msgstr "missing variable name"

#: src/quick-lint-js/diagnostic-types.h
msgid "missing 'while (condition)' for do-while statement"
msgstr "missing 'while (condition)' for do-while statement"

#: src/quick-lint-js/diagnostic-types.h
msgid "do-while statement starts here"
msgstr "do-while statement starts here"

#: src/quick-lint-js/diagnostic-types.h
msgid ""
"newline is not allowed between 'async' and arrow function parameter list"
msgstr ""
"newline is not allowed between 'async' and arrow function parameter list"

#: src/quick-lint-js/diagnostic-types.h
msgid "arrow is here"
msgstr "arrow is here"

#: src/quick-lint-js/diagnostic-types.h
msgid "number literal contains consecutive underscores"
msgstr "number literal contains consecutive underscores"

#: src/quick-lint-js/diagnostic-types.h
msgid "number literal contains trailing underscore(s)"
msgstr "number literal contains trailing underscore(s)"

#: src/quick-lint-js/diagnostic-types.h
msgid "octal literal may not have exponent"
msgstr "octal literal may not have exponent"

#: src/quick-lint-js/diagnostic-types.h
msgid "octal literal may not have decimal"
msgstr "octal literal may not have decimal"

#: src/quick-lint-js/diagnostic-types.h
msgid "integer cannot be represented and will be rounded to '{1}'"
msgstr "integer cannot be represented and will be rounded to '{1}'"

#: src/quick-lint-js/diagnostic-types.h
msgid "private properties are not allowed in object literals"
msgstr "private properties are not allowed in object literals"

#: src/quick-lint-js/diagnostic-types.h
#, fuzzy
msgid "'readonly static' is not allowed; write 'static readonly' instead"
msgstr "'async static' is not allowed; write 'static async' instead"

#: src/quick-lint-js/diagnostic-types.h
msgid "redeclaration of global variable"
msgstr "redeclaration of global variable"

#: src/quick-lint-js/diagnostic-types.h
msgid "redeclaration of variable: {0}"
msgstr "redeclaration of variable: {0}"

#: src/quick-lint-js/diagnostic-types.h
msgid "variable already declared here"
msgstr "variable already declared here"

#: src/quick-lint-js/diagnostic-types.h
msgid "RegExp literal flags cannot contain Unicode escapes"
msgstr "RegExp literal flags cannot contain Unicode escapes"

#: src/quick-lint-js/diagnostic-types.h
msgid "return statement returns nothing (undefined)"
msgstr "return statement returns nothing (undefined)"

#: src/quick-lint-js/diagnostic-types.h
msgid ""
"unexpected statement before first switch case, expected 'case' or 'default'"
msgstr ""
"unexpected statement before first switch case, expected 'case' or 'default'"

#: src/quick-lint-js/diagnostic-types.h
msgid "stray comma in let statement"
msgstr "stray comma in let statement"

#: src/quick-lint-js/diagnostic-types.h
msgid "stray comma in function parameter"
msgstr "stray comma in function parameter"

#: src/quick-lint-js/diagnostic-types.h
msgid "TypeScript's 'enum' feature is not yet implemented by quick-lint-js"
msgstr "TypeScript's 'enum' feature is not yet implemented by quick-lint-js"

#: src/quick-lint-js/diagnostic-types.h
#, fuzzy
msgid "index signature must be a field, not a method"
msgstr "indexing requires an expression"

#: src/quick-lint-js/diagnostic-types.h
#, fuzzy
msgid "index signatures require a value type"
msgstr "indexing requires an expression"

#: src/quick-lint-js/diagnostic-types.h
msgid "TypeScript's 'interface' feature is not allowed in JavaScript code"
msgstr "TypeScript's 'interface' feature is not allowed in JavaScript code"

#: src/quick-lint-js/diagnostic-types.h
#, fuzzy
msgid "TypeScript optional properties are not allowed in JavaScript code"
msgstr "TypeScript's 'interface' feature is not allowed in JavaScript code"

#: src/quick-lint-js/diagnostic-types.h
#, fuzzy
msgid "TypeScript's 'readonly' feature is not allowed in JavaScript code"
msgstr "TypeScript's 'interface' feature is not allowed in JavaScript code"

#: src/quick-lint-js/diagnostic-types.h
msgid "methods cannot be readonly"
msgstr ""

#: src/quick-lint-js/diagnostic-types.h
#, fuzzy
msgid "TypeScript type annotations are not allowed in JavaScript code"
msgstr "TypeScript's 'interface' feature is not allowed in JavaScript code"

#: src/quick-lint-js/diagnostic-types.h
msgid ""
"const fields within classes are only allowed in TypeScript, not JavaScript"
msgstr ""
"const fields within classes are only allowed in TypeScript, not JavaScript"

#: src/quick-lint-js/diagnostic-types.h
msgid "unclosed block comment"
msgstr "unclosed block comment"

#: src/quick-lint-js/diagnostic-types.h
msgid "unclosed class; expected '}' by end of file"
msgstr "unclosed class; expected '}' by end of file"

#: src/quick-lint-js/diagnostic-types.h
msgid "unclosed code block; expected '}' by end of file"
msgstr "unclosed code block; expected '}' by end of file"

#: src/quick-lint-js/diagnostic-types.h
#, fuzzy
msgid "unclosed interface; expected '}' by end of file"
msgstr "unclosed class; expected '}' by end of file"

#: src/quick-lint-js/diagnostic-types.h
msgid "unclosed identifier escape sequence"
msgstr "unclosed identifier escape sequence"

#: src/quick-lint-js/diagnostic-types.h
msgid "unclosed object literal; expected '}'"
msgstr "unclosed object literal; expected '}'"

#: src/quick-lint-js/diagnostic-types.h
msgid "object literal started here"
msgstr "object literal started here"

#: src/quick-lint-js/diagnostic-types.h
msgid "unclosed regexp literal"
msgstr "unclosed regexp literal"

#: src/quick-lint-js/diagnostic-types.h
msgid "unclosed string literal"
msgstr "unclosed string literal"

#: src/quick-lint-js/diagnostic-types.h
msgid "unclosed template"
msgstr "unclosed template"

#: src/quick-lint-js/diagnostic-types.h
msgid "unexpected '@'"
msgstr "unexpected '@'"

#: src/quick-lint-js/diagnostic-types.h
msgid "unexpected '{0}'"
msgstr "unexpected '{0}'"

#: src/quick-lint-js/diagnostic-types.h
msgid "expected parameter for arrow function, but got an expression instead"
msgstr "expected parameter for arrow function, but got an expression instead"

#: src/quick-lint-js/diagnostic-types.h
msgid "expected parameter for arrow function, but got a literal instead"
msgstr "expected parameter for arrow function, but got a literal instead"

#: src/quick-lint-js/diagnostic-types.h
msgid "unexpected '\\' in identifier"
msgstr "unexpected '\\' in identifier"

#: src/quick-lint-js/diagnostic-types.h
msgid "unexpected 'case' outside switch statement"
msgstr "unexpected 'case' outside switch statement"

#: src/quick-lint-js/diagnostic-types.h
msgid "unexpected characters in number literal"
msgstr "unexpected characters in number literal"

#: src/quick-lint-js/diagnostic-types.h
msgid "unexpected control character"
msgstr "unexpected control character"

#: src/quick-lint-js/diagnostic-types.h
msgid "unexpected characters in binary literal"
msgstr "unexpected characters in binary literal"

#: src/quick-lint-js/diagnostic-types.h
msgid "unexpected characters in octal literal"
msgstr "unexpected characters in octal literal"

#: src/quick-lint-js/diagnostic-types.h
msgid "unexpected characters in hex literal"
msgstr "unexpected characters in hex literal"

#: src/quick-lint-js/diagnostic-types.h
msgid "unexpected 'default' outside switch statement"
msgstr "unexpected 'default' outside switch statement"

#: src/quick-lint-js/diagnostic-types.h
msgid "'>' is not allowed directly in JSX text; write {{'>'} or &gt; instead"
msgstr "'>' is not allowed directly in JSX text; write {{'>'} or &gt; instead"

#: src/quick-lint-js/diagnostic-types.h
msgid "unexpected literal in parameter list; expected parameter name"
msgstr "unexpected literal in parameter list; expected parameter name"

#: src/quick-lint-js/diagnostic-types.h
msgid "'}' is not allowed directly in JSX text; write {{'}'} instead"
msgstr "'}' is not allowed directly in JSX text; write {{'}'} instead"

#: src/quick-lint-js/diagnostic-types.h
msgid "C-style for loops have only three semicolon-separated components"
msgstr "C-style for loops have only three semicolon-separated components"

#: src/quick-lint-js/diagnostic-types.h
msgid "for-in loop expression cannot have semicolons"
msgstr "for-in loop expression cannot have semicolons"

#: src/quick-lint-js/diagnostic-types.h
msgid "for-of loop expression cannot have semicolons"
msgstr "for-of loop expression cannot have semicolons"

#: src/quick-lint-js/diagnostic-types.h
msgid "unopened block comment"
msgstr "unopened block comment"

#: src/quick-lint-js/diagnostic-types.h
msgid "new variable shadows existing variable"
msgstr "new variable shadows existing variable"

#: src/quick-lint-js/diagnostic-types.h
msgid "existing variable declared here"
msgstr "existing variable declared here"

#: src/quick-lint-js/diagnostic-types.h
msgid "binary number literal has no digits"
msgstr "binary number literal has no digits"

#: src/quick-lint-js/diagnostic-types.h
msgid "hex number literal has no digits"
msgstr "hex number literal has no digits"

#: src/quick-lint-js/diagnostic-types.h
msgid "octal number literal has no digits"
msgstr "octal number literal has no digits"

#: src/quick-lint-js/diagnostic-types.h
msgid "unexpected '#'"
msgstr "unexpected '#'"

#: src/quick-lint-js/diagnostic-types.h
msgid ""
"unicode byte order mark (BOM) cannot appear before #! at beginning of script"
msgstr ""
"unicode byte order mark (BOM) cannot appear before #! at beginning of script"

#: src/quick-lint-js/diagnostic-types.h
msgid "unexpected identifier in expression; missing operator before"
msgstr "unexpected identifier in expression; missing operator before"

#: src/quick-lint-js/diagnostic-types.h
msgid "unexpected token"
msgstr "unexpected token"

#: src/quick-lint-js/diagnostic-types.h
msgid ""
"unexpected token in export; expected 'export default ...' or 'export "
"{{name}' or 'export * from ...' or 'export class' or 'export function' or "
"'export let'"
msgstr ""
"unexpected token in export; expected 'export default ...' or 'export "
"{{name}' or 'export * from ...' or 'export class' or 'export function' or "
"'export let'"

#: src/quick-lint-js/diagnostic-types.h
msgid "unexpected token in variable declaration; expected variable name"
msgstr "unexpected token in variable declaration; expected variable name"

#: src/quick-lint-js/diagnostic-types.h
msgid "unmatched indexing bracket"
msgstr "unmatched indexing bracket"

#: src/quick-lint-js/diagnostic-types.h
msgid "unmatched parenthesis"
msgstr "unmatched parenthesis"

#: src/quick-lint-js/diagnostic-types.h
msgid "unmatched '}'"
msgstr "unmatched '}'"

#: src/quick-lint-js/diagnostic-types.h
msgid "use of undeclared type: {0}"
msgstr "use of undeclared type: {0}"

#: src/quick-lint-js/diagnostic-types.h
msgid "use of undeclared variable: {0}"
msgstr "Linix user, you are using an undeclared variable dumbass: {0}"

#: src/quick-lint-js/diagnostic-types.h
msgid "variable used before declaration: {0}"
msgstr "variable used before declaration: {0}"

#: src/quick-lint-js/diagnostic-types.h
msgid "function called before declaration in block scope: {0}"
msgstr "function called before declaration in block scope: {0}"

#: src/quick-lint-js/diagnostic-types.h
msgid "function declared here"
msgstr "function declared here"

#: src/quick-lint-js/diagnostic-types.h
#, fuzzy
msgid "TypeScript interface fields cannot be initalized"
msgstr "TypeScript's 'interface' feature is not allowed in JavaScript code"

#: src/quick-lint-js/diagnostic-types.h
#, fuzzy
msgid "TypeScript interface methods cannot be marked 'async'"
msgstr "TypeScript's 'interface' feature is not allowed in JavaScript code"

#: src/quick-lint-js/diagnostic-types.h
#, fuzzy
msgid "TypeScript interface methods cannot be marked as a generator"
msgstr "TypeScript's 'interface' feature is not allowed in JavaScript code"

#: src/quick-lint-js/diagnostic-types.h
#, fuzzy
msgid "TypeScript interface methods cannot contain a body"
msgstr "TypeScript's 'interface' feature is not allowed in JavaScript code"

#: src/quick-lint-js/diagnostic-types.h
#, fuzzy
msgid "TypeScript interface properties cannot be private"
msgstr "TypeScript's 'interface' feature is not allowed in JavaScript code"

#: src/quick-lint-js/diagnostic-types.h
#, fuzzy
msgid "TypeScript interface properties cannot be 'static'"
msgstr "TypeScript's 'interface' feature is not allowed in JavaScript code"

#: src/quick-lint-js/diagnostic-types.h
msgid "break can only be used inside of a loop or switch"
msgstr "break can only be used inside of a loop or switch"

#: src/quick-lint-js/diagnostic-types.h
msgid "continue can only be used inside of a loop"
msgstr "continue can only be used inside of a loop"

#: test/test-diagnostic-formatter.cpp
#: test/test-vim-qflist-json-diag-reporter.cpp
msgid "something happened"
msgstr "something happened"

#: test/test-diagnostic-formatter.cpp
msgid "see here"
msgstr "see here"

#: test/test-diagnostic-formatter.cpp
msgid "this {0} looks fishy"
msgstr "this {0} looks fishy"

#: test/test-diagnostic-formatter.cpp
msgid "this {1} looks fishy"
msgstr "this {1} looks fishy"

#: test/test-diagnostic-formatter.cpp
msgid "free {1} and {0} {1} {2}"
msgstr "free {1} and {0} {1} {2}"

#: test/test-diagnostic-formatter.cpp
msgid "what is this '{1}' nonsense?"
msgstr "what is this '{1}' nonsense?"

#: test/test-diagnostic-formatter.cpp
msgid "a {{0} b }} c"
msgstr "a {{0} b }} c"

#: test/test-diagnostic-formatter.cpp
msgid "expected {1:headlinese}"
msgstr "expected {1:headlinese}"

#: test/test-diagnostic-formatter.cpp
msgid "expected {1:singular}"
msgstr "expected {1:singular}"

#: test/test-vim-qflist-json-diag-reporter.cpp
msgid "here"
msgstr "here"
